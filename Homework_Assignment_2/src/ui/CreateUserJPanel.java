/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;


import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Person;
import model.PersonsDirectory;
import model.UsersDirectory;
import org.mindrot.jbcrypt.BCrypt;


/**
 *
 * @author ASUS
 */
public class CreateUserJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateUserJPanel
     */
    
    private JPanel MainPanel;
    private PersonsDirectory personDirectory;
    private UsersDirectory userDirectory;
    private DefaultTableModel dtm;
    private Map<String, ArrayList<String>> credentialsHistory;
    
    public CreateUserJPanel(JPanel MainPanel, PersonsDirectory personDirectory,UsersDirectory userDirectory,Map<String, ArrayList<String>> credentialsHistory) {
        initComponents();
        this.MainPanel = MainPanel;
        this.personDirectory = personDirectory;
        this.userDirectory = userDirectory;
        dtm = (DefaultTableModel) tblPerson.getModel();
        this.credentialsHistory = credentialsHistory;
        populateTable();
        lblCredHeader.setVisible(false);
        lblUsername.setVisible(false);
        lblPassword.setVisible(false);
        txtUsername.setVisible(false);
        txtPassword.setVisible(false);
        btnSetCred.setVisible(false);
        btnSetDefault.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    public void populateTable(){
        dtm.setRowCount(0);
        for(Person person: personDirectory.getPersonList()){
            if(person.isAccountCreatedStatus() == false){
                Object[] row = new Object[4];
                row[0] = person;
                row[1] = person.getName();
                row[2] = person.getEmail();
                row[3] = person.getCourseName();
            
                dtm.addRow(row);
            }
        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPerson = new javax.swing.JTable();
        btnCreateuser = new javax.swing.JButton();
        lblCredHeader = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        btnSetDefault = new javax.swing.JButton();
        btnSetCred = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();

        setBackground(new java.awt.Color(167, 199, 231));

        btnBack.setBackground(new java.awt.Color(102, 102, 255));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblPerson.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NUID", "Name", "Email", "Course Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPerson);

        btnCreateuser.setBackground(new java.awt.Color(102, 102, 255));
        btnCreateuser.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCreateuser.setText("Create User");
        btnCreateuser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateuserActionPerformed(evt);
            }
        });

        lblCredHeader.setText("Set User Credentials:");

        lblUsername.setText("Username:");

        lblPassword.setText("Password:");

        btnSetDefault.setBackground(new java.awt.Color(102, 102, 255));
        btnSetDefault.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSetDefault.setText("Set Default Credentails");
        btnSetDefault.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetDefaultActionPerformed(evt);
            }
        });

        btnSetCred.setBackground(new java.awt.Color(102, 102, 255));
        btnSetCred.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSetCred.setText("Save Credentials");
        btnSetCred.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetCredActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblUsername)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtUsername))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPassword))
                            .addComponent(btnCreateuser, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCredHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSetCred, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSetDefault)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCreateuser, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblCredHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUsername, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSetCred, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSetDefault, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        MainPanel.remove(this);
        CardLayout layout = (CardLayout) MainPanel.getLayout();
        layout.previous(MainPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCreateuserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateuserActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblPerson.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a person from the list!","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            lblCredHeader.setVisible(true);
            lblUsername.setVisible(true);
            lblPassword.setVisible(true);
            txtUsername.setVisible(true);
            txtPassword.setVisible(true);
            btnSetCred.setVisible(true);
            btnSetDefault.setVisible(true);            
        }
    }//GEN-LAST:event_btnCreateuserActionPerformed

    private void btnSetCredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetCredActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblPerson.getSelectedRow();
        Person person = (Person)tblPerson.getValueAt(selectedRow, 0);
        String username = txtUsername.getText().trim();
        String plainPassword = String.valueOf(txtPassword.getPassword()).trim();
        String salt = BCrypt.gensalt();
        String password = BCrypt.hashpw(plainPassword, salt);

        String NUID = person.getNeuID();
        
        if(username.isEmpty() || password.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please make sure all fields are filled in before proceeding.", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        for(Person personU: userDirectory.getUserList()){
            if(personU.getUsername().equals(username)){
                JOptionPane.showMessageDialog(this, "Username already exist. Please try with a new one.", "Username Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        
        if (credentialsHistory.containsKey(NUID)) {
            ArrayList<String> passwords = credentialsHistory.get(NUID);
            // Check if the new password is unique compared to the old ones
            for(String hashedPass : passwords){
                if (BCrypt.checkpw(plainPassword,hashedPass)) {
                    JOptionPane.showMessageDialog(this, "Password should be unique from last passwords!", "Password Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }else {
                    passwords.add(password);
                }
            }
            
        } else {
            // If the user is new, create a new list and add the password
            ArrayList<String> passwords = new ArrayList<>();
            passwords.add(password);
            credentialsHistory.put(NUID, passwords);
        }
        
        
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this,"Would you like to create user for the selected person.","Notice",dialogButton);
        if(dialogResult == JOptionPane.YES_OPTION){
            personDirectory.updatePersonEnabledStatus(person, username, password,true);
            Person personU = userDirectory.addUser();
            personU.shallowCopyObject(person);
            populateTable();
            lblCredHeader.setVisible(false);
            lblUsername.setVisible(false);
            lblPassword.setVisible(false);
            txtUsername.setVisible(false);
            txtPassword.setVisible(false);
            btnSetCred.setVisible(false);
            btnSetDefault.setVisible(false);
        }
    }//GEN-LAST:event_btnSetCredActionPerformed

    private void btnSetDefaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetDefaultActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = tblPerson.getSelectedRow();
        Person person = (Person)tblPerson.getValueAt(selectedRow, 0);
        String username = person.getNeuID();
        String plainPassword = person.getNeuID();
        String salt = BCrypt.gensalt();
        String password = BCrypt.hashpw(plainPassword, salt);
        if(username.isEmpty() || password.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please make sure all fields are filled in before proceeding.", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this,"Would you like to create user for the selected person.","Notice",dialogButton);
        if(dialogResult == JOptionPane.YES_OPTION){
            personDirectory.updatePersonEnabledStatus(person, username, password,true);
            Person personU = userDirectory.addUser();
            personU.shallowCopyObject(person);
            populateTable();        
            lblCredHeader.setVisible(false);
            lblUsername.setVisible(false);
            lblPassword.setVisible(false);
            txtUsername.setVisible(false);
            txtPassword.setVisible(false);
            btnSetCred.setVisible(false);
            btnSetDefault.setVisible(false);
        }
    }//GEN-LAST:event_btnSetDefaultActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateuser;
    private javax.swing.JButton btnSetCred;
    private javax.swing.JButton btnSetDefault;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCredHeader;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTable tblPerson;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
